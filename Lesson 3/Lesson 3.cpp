// Lesson 3. Работа с целой частью числа и дробной. Условные операторы.

#include <iostream> 
using namespace std;

int main()
{
    /*double b = 9.81;
    int a = int(b);
    int c = 10, d = 6;
    a = c % d;*/

    /*Задача №1.Вариант решения №1 с помощью нескольких переменных.
    In: 248
    Out: 842*/
    //int a, b, c, d, g;
    //cin >> d;
    
    //a = d / 100; // первая цифра
    //c = (d / 10) % 10; // предпоследняя цифра
    //b = d % 10; // последняя цифра

    //g = b * 100 + c * 10 + a;
    //cout << g;

    // Задача №1. Вариант решения №2. 
    //int m = d % 10;
    //m = m * 10 + (d / 10) % 10;
    //m = m * 10 + d / 100;
    //cout << m;

    // Задача №1. Вариант решения №3 (в одну строчку).
    //int k = (d % 10) * 10 + ((d / 10) % 10) * 10 + d / 100;
    //cout << k;

    // Задача №1. Вариант решения №4 (с помощью цикла).
    //int x, k, m, c, t = 100;
    //cin >> x;
    //int a = x;
    //while (x != 0) {
        //m = x % 10;
        //c = c + t * m;
        //t = t / 10;
        //x = x / 10;
    //}
    //cout << c;
    
    /*Логические операции : >, <, >= , <= , == , != , &&, || -бинарные операции.
    Унарные операции: xor(исключающее или), !(a = - a). 
    Логические оперции возвращают булево значение. 0 - ложь; 1, -4, -100, 5 - истина.
    Преоритет: && (как *), || (как +).*/

    // Условные операторы if(условное/логическое выражение) | выполняется блок 1
    // else | блок 2 | выполняется блок 2.
    //Не полная запись условного оператора.
   
    // Задача №2 ABS. Ввод числа, вывести модуль.
    //int x;
    //cin >> x;

    //if (x < 0) 
    //    x = -x;
    //cout << "x = " << x;

    // Задача №3. Условие. 
    //int y, x1, x2;
    //cout << "In: y, x1, x2 ";
    //cin >> y >> x1 >> x2;

    //if (y >= x1 && y <= x2) {
    //    y = x * x;
    //}
    //else {
    //    y = x2 - x1;
    //    if (x < 0)
    //        y = y - x;
    //    else
    //        y = y + x;
    //}
    //cout << "y = " << y;
    
    //Операторные скобки нужны для того чтобы несколько операторов объединить в одно целое 
    //и получаем составной оператор. Локальная переменная существует в рамках блока, где она объявлена. 
    //Локальные переменные в преоритете в блоке, чем глобальные.

    // Задача №4. 
    int l1, h1, l2, h2, l, h;
    cout << "IN: l1, h1, l2, h2, l, h";
    cin >> l1 >> h1 >> l2 >> h2 >> l >> h;
     if (l < l1 && h < h1 || l < l2 && h < h2){
         cout << "Yes";
     }
     else{
         cout << "No";
     }
    system("pause");
}
